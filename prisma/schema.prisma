generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model author {
  id        Int      @id @default(autoincrement())
  name      String   @unique(map: "Author_name_key")
  createdAt DateTime @default(now())
  book      book[]
}

// Modelo book CORRIGIDO (com a nova linha 'currentReading')
model book {
  id          Int          @id @default(autoincrement())
  title       String
  year        Int?
  pages       Int
  genre       String?
  status      book_status  @default(TO_READ)
  rating      book_rating?
  cover       String       @db.Text
  isbn        String       @unique(map: "Book_isbn_key")
  description String       @db.Text
  notes       String?      @db.Text
  authorId    Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  author      author       @relation(fields: [authorId], references: [id], map: "Book_authorId_fkey")

  // NOVO: Relação para as leituras atuais
  currentReading CurrentReading[] // <--- ESTA LINHA FOI INSERIDA NO MODELO ORIGINAL

  @@index([authorId], map: "Book_authorId_fkey")
}

enum book_status {
  READ
  READING
  TO_READ
  ABANDONED
  PAUSED
}

enum book_rating {
  ONE_STAR
  TWO_STARS
  THREE_STARS
  FOUR_STARS
  FIVE_STARS
}

// --- NOVOS MODELOS PARA LEITURAS ATUAIS ---

model CurrentReading {
  id Int @id @default(autoincrement())

  bookId Int
  book   book @relation(fields: [bookId], references: [id])

  currentPage Int     @default(0)
  isPaused    Boolean @default(false)

  startedAt       DateTime  @default(now())
  predictedFinish DateTime?

  progressUpdates ProgressUpdate[]
  notes           ReadingNote[]

  @@unique([bookId])
}

model ProgressUpdate {
  id Int @id @default(autoincrement())

  readingId Int
  reading   CurrentReading @relation(fields: [readingId], references: [id])

  pagesRead      Int
  readingTimeMin Int
  date           DateTime @default(now())
}

model ReadingNote {
  id Int @id @default(autoincrement())

  readingId Int
  reading   CurrentReading @relation(fields: [readingId], references: [id])

  pageReference Int?
  content       String   @db.Text
  createdAt     DateTime @default(now())
}
